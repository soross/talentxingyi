package com.snda.inote.activity;import android.app.Activity;import android.app.AlertDialog;import android.app.Dialog;import android.app.ProgressDialog;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import com.snda.inote.Inote;import com.snda.inote.R;import com.snda.inote.model.Category;import com.snda.inote.model.Note;import com.snda.inote.util.UserTask;public class AddSimpleActivity extends Activity {    private EditText contentView;    private static final int DIALOG_SAVE = 0;    private static final int DIALOG_CANCEL_ALERT = 1;    private Toast mToast;    private Activity context = AddSimpleActivity.this;    private int cate_id;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.addsimple);        Intent intent = getIntent();        cate_id = intent.getIntExtra("cate_id", 0);        contentView = (EditText) findViewById(R.id.iptNoteContent);        Button btnCancel = (Button) findViewById(R.id.btnNoteCancel);        Button btnSubmit = (Button) findViewById(R.id.btnNoteSubmit);        btnCancel.setOnClickListener(handlerClickLisenter);        btnSubmit.setOnClickListener(handlerClickLisenter);//        SDOAnalyzeAgentInterface.onCreate(context);    }//    @Override//    protected void onPause() {//        super.onPause();//        SDOAnalyzeAgentInterface.onPause(context);//    }////    @Override//    protected void onDestroy() {//        super.onDestroy();//        SDOAnalyzeAgentInterface.onDestroy(context);//    }////    @Override//    protected void onResume() {//        super.onResume();//        SDOAnalyzeAgentInterface.onResume(context);//    }    public static void show(Context context, int cate_id) {        Intent intent = new Intent();        intent.putExtra("cate_id", cate_id);        intent.setClass(context, AddSimpleActivity.class);        context.startActivity(intent);    }    private Button.OnClickListener handlerClickLisenter = new Button.OnClickListener() {        public void onClick(View v) {            switch (v.getId()) {                case R.id.btnNoteCancel:                    if (needShowAlert()) {                        showDialog(DIALOG_CANCEL_ALERT);                    } else {                        finish();                    }                    break;                case R.id.btnNoteSubmit:                    saveNote();                    break;            }        }    };    private boolean needShowAlert() {        return contentView.getText().toString().trim().length() > 0;    }    @Override    protected Dialog onCreateDialog(int id) {        switch (id) {            case DIALOG_SAVE:                ProgressDialog dialog = new ProgressDialog(AddSimpleActivity.this);                dialog.setMessage(getString(R.string.note_save));                dialog.setIndeterminate(true);                dialog.setCancelable(true);                return dialog;            case DIALOG_CANCEL_ALERT:                return new AlertDialog.Builder(context)                        .setIcon(R.drawable.icon)                        .setTitle(R.string.not_save_note_alert_title)                        .setMessage(R.string.not_save_note_alert)                        .setPositiveButton(R.string.not_save_note_btn_yes, new DialogInterface.OnClickListener() {                            public void onClick(DialogInterface dialog, int which) {                                saveNote();                            }                        })                        .setNegativeButton(R.string.not_save_note_btn_no, new DialogInterface.OnClickListener() {                            public void onClick(DialogInterface dialog, int which) {                                finish();                            }                        })                        .create();        }        return null;    }    private void saveNote() {        String content = contentView.getText().toString();        if (content.trim().length() == 0) {            showToast(getString(R.string.empty_note_alert));        } else {            showDialog(DIALOG_SAVE);            new saveNoteTask().execute();        }    }    @Override    public void onBackPressed() {        if (needShowAlert()) {            showDialog(DIALOG_CANCEL_ALERT);        } else {            super.onBackPressed();        }    }    private void showToast(String str) {        if (mToast != null) {            mToast.cancel();        }        mToast = Toast.makeText(AddSimpleActivity.this, str, Toast.LENGTH_LONG);        mToast.show();    }    private class saveNoteTask extends UserTask<Object, Void, Integer> {        @Override        public Integer doInBackground(Object... params) {            Inote.setNeedReloadCategory(true);            Category category = cate_id == 0 ? Inote.instance.getDefaultPrivateCategory() : Inote.instance.getCategoryBy_id(cate_id);            String content = contentView.getText().toString();            Note note = null;            try {                note = Inote.instance.addSimpleNote(content, category);                Inote.instance.addSyncChangeLocal(String.valueOf(note.get_ID()), 1, 1);            } catch (Exception e) {                e.printStackTrace();            } finally {                Inote.instance.updateCategoryCount(Inote.instance.getCategoryBy_id(category.get_ID()));            }            if (note != null) {                return note.get_ID();            }            return -1;  //bad design        }        public void onPostExecute(Integer _id) {            Inote.instance.startSync();            removeDialog(DIALOG_SAVE);            showToast(getString(R.string.note_save_success));            NoteActivity.show(context, _id);            finish();        }    }}